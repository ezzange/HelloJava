##상속 (Inheritance)

- 클래스를 확장하여 사용하기 위해 사용한다.
- 기존의 클래스와 새로운 클래스를 부모와 자식으로(상속 관계)로 이어 새로운 클래스에서 기존의 클래스 코드를 재사용할 수 있다.
- 자식 클래스는 부모 클래스의 모든 멤버를 상속받아 부모의 멤버를 사용할 수 있어 자식의 멤버는 부모 클래스보다 적을 수 없다.
- 부모 클래스는 자식 클래스의 변경에 영향을 받지 않는다.
- Class 경우 extends 키워드를 사용하여 기존 클래스를 상속받을 수 있다.
- 단일 상속 만을 허용한다.(-> 필요하다면 하나의 클래스를 상속하고 나머지는 포함 관계를 이용한다.)
- 모든 클래스는 컴파일 시 컴파일러에 의하여 Object 클래스를 자동적으로 상속받아 Object 클래스의 메서드를 사용할 수 있다.
  (toString, equals(Object object), hashCode(), ...)

- ex1 | Child는 Parent를 상속받아 Parent의 멤버를 사용할 수 있다.
- ex2 | Point3D는 point를 상속받아 point의 멤버를 사용할 수 있다.
- ex3 | 자식 클래스만 생성하여 자식 클래스가 상속받은 부모의 멤버를 사용할 수 있다.
- ex4 | 클래스에서 Object의 메서드를 사용할 수 있다.


## 참조 변수
- 객체 자신을 가리키기 위해 사용되는 변수로 Java는 객체는 힙(heap) 메모리에 할당되고, 해당 객체에 접근하려면 참조 변수를 사용한다.
- 참조 변수는 실제로 객체 자체가 아닌, 힙 메모리에 위치한 객체를 가리키는 주솟값을 저장하여 이 주솟값은 객체의 데이터와 메서드에 대한 접근을 가능하다.

 참조변수 super
- 인스턴스 메서드 내에만 존재하는 객체를 가리키는 참조 변수이다.
- 자식 클래스가 자신의 멤버 이름과 상속 받은 부모 클래스의 멤버 이름이 같을 경우,
    자신의 멤버는 this.변수명 부모의 멤버는 super.변수명 으로 구별할 수 있다.
- 만일 부모 클래스에만 존재하는 변수명을 참조 변수 super와 this를 사용하면 상속받은 멤버는 자식 클래스의 멤버이므로 super와 this 같은 값을 가리킨다.
- 객체 자신을 가리키는 참조 변수로 인스턴스 메서드와 생성자에만 존재하고 static 메서드에는 존재할 수 없다.

- ex5 | 이름이 같은 자식의 멤버와 부모의 멤버를 참조 변수 super와 this를 사용하여 구분할 수 있다.

- 생성자 super()와 헷갈리지 말 것
- 생성자 super()는 참조 변수 super와 관계 없음
 생성자 super()
- 부모클래스의 생성자를 호출할 때 사용하는 생성자.
- 부모클래스의 멤버는 부모생성자(super)를 호출하여 초기화 하는 것이 바람직하며 작성하지 않을 경우 컴파일러에서 자동 삽입해준다.
  ( 메서드의 따라 반환값이 달라질 수 있으니 주의 )

- ex6 | 자식 클래스에서 생성자 super()를 사용하여 부모 클래스의 멤버를 초기화 한다.
- ex7 | 생성자 작성 시 첫 줄에 this() 혹은 super() 생성자를 호출하여 작 성할 수 있다.